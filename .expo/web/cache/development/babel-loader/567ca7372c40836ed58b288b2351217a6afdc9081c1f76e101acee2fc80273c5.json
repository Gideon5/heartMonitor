{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SessionAction = function SessionAction() {\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonECG,\n        onPress: function onPress() {\n          return Alert.alert('Left button pressed');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"blue\"\n          },\n          children: \"ECG\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonHR,\n        onPress: function onPress() {\n          return Alert.alert('Right button pressed');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"HR\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.startSessionContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.startSession,\n        onPress: function onPress() {\n          return Alert.alert('Start Session');\n        },\n        children: _jsx(Text, {\n          children: \" Start Session\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.startSession,\n        onPress: function onPress() {\n          return Alert.alert('End Session');\n        },\n        children: _jsx(Text, {\n          children: \" End Session\"\n        })\n      })]\n    }), \"View\"]\n  });\n};\nexport default SessionAction;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderColor: \"#0000FF\",\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 10,\n    width: 250,\n    height: 25\n  },\n  buttonECG: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  buttonHR: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#0000FF'\n  },\n  startSessionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  startSession: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    borderRadius: 8,\n    padding: 5,\n    height: 40,\n    borderWidth: 1,\n    borderColor: 'transparent',\n    flex: 1,\n    color: '#0000FF',\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"names":["SessionAction","_jsxs","SafeAreaView","children","View","style","styles","buttonContainer","_jsx","TouchableOpacity","buttonECG","onPress","Alert","alert","Text","color","buttonHR","startSessionContainer","startSession","StyleSheet","create","container","flex","justifyContent","marginHorizontal","flexDirection","borderColor","borderWidth","borderRadius","margin","width","height","alignItems","backgroundColor","paddingHorizontal","padding"],"sources":["/Users/c_note/Desktop/tutorials/reactNative/heartMonitor/components/SessionBtn/SessionAction.jsx"],"sourcesContent":["import {  StyleSheet,\n    Button,\n    View,\n    Text,\n    SafeAreaView,\n    TouchableOpacity,\n    Alert} from 'react-native'\n\nconst SessionAction = () => {\n  return (\n    <SafeAreaView>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.buttonECG}\n            onPress={() => Alert.alert('Left button pressed')}\n            >\n            <Text style={{ color: \"blue\"}}>ECG</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.buttonHR}\n            onPress={() => Alert.alert('Right button pressed')}\n            >\n            <Text style={{ color: \"white\"}}>HR</Text>\n          </TouchableOpacity>\n          \n        </View>   \n        <View style={styles.startSessionContainer}>\n            <TouchableOpacity style={styles.startSession} onPress={() => Alert.alert('Start Session')}>\n              <Text> Start Session</Text>\n            </TouchableOpacity>        \n            <TouchableOpacity style={styles.startSession} onPress={() => Alert.alert('End Session')}>\n              <Text> End Session</Text>\n            </TouchableOpacity>        \n        </View>\n        View\n    </SafeAreaView> \n  )\n}\n\nexport default SessionAction\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        borderColor: \"#0000FF\",\n        borderWidth: 1,\n        borderRadius: 5,\n        margin: 10,\n        width: 250,\n        height: 25,\n      },\n      buttonECG: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n      },\n      buttonHR: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#0000FF',\n      },\n      startSessionContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingHorizontal: 20,\n      },\n      startSession: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n        borderRadius: 8,\n        padding: 5,\n        height: 40,\n        borderWidth: 1,\n        borderColor: 'transparent',\n        flex: 1,\n        color: '#0000FF',\n        marginHorizontal: 10,\n      },\n   \n  });\n  "],"mappings":";;;;;;;;;AAQA,IAAMA,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,OACEC,KAAA,CAACC,YAAY;IAAAC,QAAA,GACTF,KAAA,CAACG,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAJ,QAAA,GAClCK,IAAA,CAACC,gBAAgB;QAACJ,KAAK,EAAEC,MAAM,CAACI,SAAU;QACxCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,KAAK,CAACC,KAAK,CAAC,qBAAqB,CAAC;QAAA,CAAC;QAAAV,QAAA,EAElDK,IAAA,CAACM,IAAI;UAACT,KAAK,EAAE;YAAEU,KAAK,EAAE;UAAM,CAAE;UAAAZ,QAAA,EAAC;QAAG;MAAO,EACxB,EACnBK,IAAA,CAACC,gBAAgB;QAACJ,KAAK,EAAEC,MAAM,CAACU,QAAS;QACvCL,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,KAAK,CAACC,KAAK,CAAC,sBAAsB,CAAC;QAAA,CAAC;QAAAV,QAAA,EAEnDK,IAAA,CAACM,IAAI;UAACT,KAAK,EAAE;YAAEU,KAAK,EAAE;UAAO,CAAE;UAAAZ,QAAA,EAAC;QAAE;MAAO,EACxB;IAAA,EAEd,EACPF,KAAA,CAACG,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACW,qBAAsB;MAAAd,QAAA,GACtCK,IAAA,CAACC,gBAAgB;QAACJ,KAAK,EAAEC,MAAM,CAACY,YAAa;QAACP,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,KAAK,CAACC,KAAK,CAAC,eAAe,CAAC;QAAA,CAAC;QAAAV,QAAA,EACxFK,IAAA,CAACM,IAAI;UAAAX,QAAA,EAAC;QAAc;MAAO,EACV,EACnBK,IAAA,CAACC,gBAAgB;QAACJ,KAAK,EAAEC,MAAM,CAACY,YAAa;QAACP,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,KAAK,CAACC,KAAK,CAAC,aAAa,CAAC;QAAA,CAAC;QAAAV,QAAA,EACtFK,IAAA,CAACM,IAAI;UAAAX,QAAA,EAAC;QAAY;MAAO,EACR;IAAA,EAChB,QAEX;EAAA,EAAe;AAEnB,CAAC;AAED,eAAeH,aAAa;AAE5B,IAAMM,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC7BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,gBAAgB,EAAE;EACpB,CAAC;EACDjB,eAAe,EAAE;IACbkB,aAAa,EAAE,KAAK;IACpBF,cAAc,EAAE,QAAQ;IACxBG,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACDrB,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPU,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE,QAAQ;IACxBU,eAAe,EAAE;EACnB,CAAC;EACDjB,QAAQ,EAAE;IACRM,IAAI,EAAE,CAAC;IACPU,UAAU,EAAE,QAAQ;IACpBT,cAAc,EAAE,QAAQ;IACxBU,eAAe,EAAE;EACnB,CAAC;EACDhB,qBAAqB,EAAE;IACrBQ,aAAa,EAAE,KAAK;IACpBF,cAAc,EAAE,eAAe;IAC/BS,UAAU,EAAE,QAAQ;IACpBE,iBAAiB,EAAE;EACrB,CAAC;EACDhB,YAAY,EAAE;IACZK,cAAc,EAAE,QAAQ;IACxBS,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,aAAa;IAC9BL,YAAY,EAAE,CAAC;IACfO,OAAO,EAAE,CAAC;IACVJ,MAAM,EAAE,EAAE;IACVJ,WAAW,EAAE,CAAC;IACdD,WAAW,EAAE,aAAa;IAC1BJ,IAAI,EAAE,CAAC;IACPP,KAAK,EAAE,SAAS;IAChBS,gBAAgB,EAAE;EACpB;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}